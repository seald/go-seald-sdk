// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.library' version '8.8.0' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'org.jetbrains.kotlin.android' version '1.9.25' apply false // Do not update to 2.x.x yet, because apps built with Kotlin 1.x.x cannot use libs built with 2.x.x .
    id 'org.jetbrains.dokka' version '2.0.0'
}

subprojects {
    apply plugin: 'org.jetbrains.dokka'
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
}
// Use system environment variables
ext['ossrhUsername'] = System.getenv('OSSRH_USERNAME') ?: findProperty('ossrhUsername')
ext['ossrhPassword'] = System.getenv('OSSRH_PASSWORD') ?: findProperty('ossrhPassword')
ext['sonatypeStagingProfileId'] = System.getenv('SONATYPE_STAGING_PROFILE_ID') ?: findProperty('sonatypeStagingProfileId')
ext['signing.keyId'] = System.getenv('SIGNING_KEY_ID') ?: findProperty('signing.keyId')
ext['signing.key'] = System.getenv('SIGNING_KEY') ?: findProperty('signing.key')
ext['signing.password'] = System.getenv('SIGNING_PASSWORD') ?: findProperty('signing.password')

// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            username = ossrhUsername
            password = ossrhPassword
            stagingProfileId = sonatypeStagingProfileId
            nexusUrl.set(uri('https://s01.oss.sonatype.org/service/local/'))
            snapshotRepositoryUrl.set(uri('https://s01.oss.sonatype.org/content/repositories/snapshots/'))
        }
    }
}
